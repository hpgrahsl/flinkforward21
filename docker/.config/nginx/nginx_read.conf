worker_processes  1;

events {
  worker_connections  1024;
}

http {
    sendfile on;
    index    index.html index.htm index.php;
    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    
    server {

        listen 80;

        location / {
            root /usr/share/nginx/html/;
        }

        # REDIRECT monolith SEARCH owner requests to microservice
        location ~* ^/petclinic/owners(\.html)?(\?lastName.*)?$ {
            rewrite ^/petclinic/owners(\.html)?(\?lastName.*)?$ /owners/$2 break; 
            proxy_pass         http://quarkus-owner-service:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        # REDIRECT microservice WRITE owner requests to monolith
        # until owner writes are implemented in the microservice
        location ~* ^(/owners/[0-9]+) {
            rewrite ^(/owners/[0-9]+) /petclinic/$1/edit.html break; 
            proxy_pass         http://spring-petclinic:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        # SERVE ALL other petclinic requests by the monolith
        location ~* ^/petclinic(/.*)* {
            rewrite ^/petclinic(/.*)* /petclinic/$1 break; 
            proxy_pass         http://spring-petclinic:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        # SERVE microservice resource requests by the microservice
        location ~* ^(/webjars/.*|/images/.*) {
            rewrite ^(/webjars/.*|/images/.*) $1 break; 
            proxy_pass         http://quarkus-owner-service:8080;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

    }

}

